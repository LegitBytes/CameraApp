(()=>{"use strict";var e={841:(e,r,a)=>{a.d(r,{OG:()=>s,O8:()=>t,mt:()=>o,nS:()=>c});const s=e=>({statusCode:200,body:JSON.stringify(e),headers:{"Access-Control-Allow-Headers":"Content-Type","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"OPTIONS,POST,GET,PUT,DELETE,PATCH"}}),t=e=>({statusCode:201,body:JSON.stringify(e),headers:{"Access-Control-Allow-Headers":"Content-Type","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"OPTIONS,POST,GET,PUT,DELETE,PATCH"}}),o=e=>({statusCode:400,body:JSON.stringify(e),headers:{"Access-Control-Allow-Headers":"Content-Type","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"OPTIONS,POST,GET,PUT,DELETE,PATCH"}}),c=e=>({statusCode:500,body:JSON.stringify(e),headers:{"Access-Control-Allow-Headers":"Content-Type","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"OPTIONS,POST,GET,PUT,DELETE,PATCH"}})},360:(e,r,a)=>{a.d(r,{Z:()=>s});const s={INTEGRATOR_SAVE:"Integrator Saved Successfully.",INTEGRATOR_UPDATE:"Integrator Updated Successfully.",INTEGRATOR_DELETE:"Integrator Deleted Successfully.",INTEGRATOR_NOT_FOUND:"Integrator not found with the given ID.",INTEGRATOR_PATHPARAMETERS_ERROR:"Please provide Integrator ID.",GROUP_SAVE:"Group Saved Successfully.",GROUP_UPDATE:"Group Updated Successfully.",GROUP_DELETE:"Group Deleted Successfully.",GROUP_NOT_FOUND:"Group not found with the given ID.",GROUP_PATHPARAMETERS_ERROR:"Please provide Group ID.",GROUP_ID_NOT_PROVIDED_ERROR:"Please provide Group IDs.",SITE_SAVE:"Site Saved Successfully.",SITE_UPDATE:"Site Updated Successfully.",SITE_DELETE:"Site Deleted Successfully.",SITE_NOT_FOUND:"Site not found with the given ID.",SITE_PATHPARAMETERS_ERROR:"Please provide Site ID.",SITE_ID_NOT_PROVIDED_ERROR:"Please provide Site IDs.",USER_SAVE:"User Saved Successfully.",USER_UPDATE:"User Updated Successfully.",USER_DELETE:"User Deleted Successfully.",USER_NOT_FOUND:"User not found with the given ID.",USER_PATHPARAMETERS_ERROR:"Please provide User ID.",USER_ID_NOT_PROVIDED_ERROR:"Please provide User IDs.",CUSTOMER_SAVE:"Customer Saved Successfully.",CUSTOMER_UPDATE:"Customer Updated Successfully.",CUSTOMER_DELETE:"Customer Deleted Successfully.",CUSTOMER_NOT_FOUND:"Customer not found with the given ID.",CUSTOMER_PATHPARAMETERS_ERROR:"Please provide Customer ID.",CUSTOMER_ID_NOT_PROVIDED_ERROR:"Please provide Customer IDs.",CAMERA_SAVE:"Camera Saved Successfully.",CAMERA_UPDATE:"Camera Updated Successfully.",CAMERA_DELETE:"Camera Deleted Successfully.",CAMERA_NOT_FOUND:"Camera not found with the given ID.",CAMERA_PATHPARAMETERS_ERROR:"Please provide Camera ID.",CAMERA_ID_NOT_PROVIDED_ERROR:"Please provide Camera IDs.",SERVER_ERROR:"Internal Server Error occured."}},663:(e,r,a)=>{a.d(r,{z:()=>n});var s=a(806),t=a.n(s),o=a(657),c=a.n(o);const n=e=>t()(e).use(c()())},806:e=>{e.exports=require("@middy/core")},657:e=>{e.exports=require("@middy/http-json-body-parser")},212:e=>{e.exports=require("@prisma/client")}},r={};function a(s){var t=r[s];if(void 0!==t)return t.exports;var o=r[s]={exports:{}};return e[s](o,o.exports,a),o.exports}a.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return a.d(r,{a:r}),r},a.d=(e,r)=>{for(var s in r)a.o(r,s)&&!a.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:r[s]})},a.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var s={};(()=>{a.r(s),a.d(s,{addCamera:()=>c,getCameraById:()=>n,getAllCameras:()=>d,editCamera:()=>E,editDisableCamera:()=>_,deleteCamera:()=>R});var e=a(841),r=a(663),t=a(360);const o=new(a(212).PrismaClient),c=(0,r.z)((async r=>{try{console.log(r.body);const{camera_name:a,smtp_user_name:s,smtp_password:c,group_id:n,integrator_id:d}=r.body;if(r.body.camera_ip){const E=await o.cameras.create({data:{camera_name:a,camera_ip:r.body.camera_ip,smtp_user_name:s,smtp_password:c,group_id:n,integrator_id:d}});return(0,e.O8)({message:t.Z.CAMERA_SAVE,camera:E})}const E=await o.cameras.create({data:{camera_name:a,smtp_user_name:s,smtp_password:c,group_id:n,integrator_id:d}});return(0,e.O8)({message:t.Z.CAMERA_SAVE,camera:E})}catch(r){return console.error(r),(0,e.nS)({message:t.Z.SERVER_ERROR,error:r})}})),n=(0,r.z)((async r=>{if(!r.pathParameters||!r.pathParameters.cameraId)return(0,e.mt)({message:t.Z.CAMERA_PATHPARAMETERS_ERROR});const a=r.pathParameters.cameraId;try{const r=await o.cameras.findUnique({where:{camera_id:a},select:{camera_id:!0,camera_name:!0,smtp_user_name:!0,smtp_password:!0,is_disabled:!0,groups:!0,integrators:!0,users:!0}});return(0,e.OG)({camera:{...r,total_request:0}})}catch(r){return console.error(r),(0,e.nS)({message:t.Z.SERVER_ERROR,error:r})}})),d=(0,r.z)((async()=>{const r=(await o.cameras.findMany({select:{camera_id:!0,camera_name:!0,smtp_user_name:!0,smtp_password:!0,is_disabled:!0,groups:!0,integrators:!0,users:!0}})).map((e=>({...e,total_request:0})));return(0,e.OG)({cameras:r})})),E=(0,r.z)((async r=>{if(!r.pathParameters||!r.pathParameters.cameraId)return(0,e.mt)({message:t.Z.CAMERA_PATHPARAMETERS_ERROR});const{camera_name:a,smtp_user_name:s,smtp_password:c,group_id:n,integrator_id:d}=r.body,E=r.pathParameters.cameraId;if(r.body.camera_ip){const E=await o.cameras.create({data:{camera_name:a,camera_ip:r.body.camera_ip,smtp_user_name:s,smtp_password:c,group_id:n,integrator_id:d}});return(0,e.O8)({message:t.Z.CAMERA_SAVE,camera:E})}try{return await o.cameras.update({where:{camera_id:E},data:{camera_name:a,smtp_user_name:s,smtp_password:c,group_id:n,integrator_id:d}}),(0,e.OG)({message:t.Z.CAMERA_UPDATE})}catch(r){return console.error(r),(0,e.nS)({message:t.Z.SERVER_ERROR,error:r})}})),_=(0,r.z)((async r=>{if(!r.pathParameters||!r.pathParameters.cameraId)return(0,e.mt)({message:t.Z.CAMERA_PATHPARAMETERS_ERROR});const a=r.pathParameters.cameraId,{is_disabled:s}=r.body;try{return await o.cameras.update({where:{camera_id:a},data:{is_disabled:s}}),(0,e.OG)({message:t.Z.CAMERA_UPDATE})}catch(r){return console.error(r),(0,e.nS)({message:t.Z.SERVER_ERROR,error:r})}})),R=(0,r.z)((async r=>{if(!r.pathParameters||!r.pathParameters.cameraId)return(0,e.mt)({message:t.Z.CAMERA_PATHPARAMETERS_ERROR});const a=r.pathParameters.cameraId;try{return await o.cameras.delete({where:{camera_id:a}}),(0,e.OG)({message:t.Z.CAMERA_DELETE})}catch(r){return console.error(r),(0,e.nS)({message:t.Z.SERVER_ERROR,error:r})}}))})();var t=exports;for(var o in s)t[o]=s[o];s.__esModule&&Object.defineProperty(t,"__esModule",{value:!0})})();
//# sourceMappingURL=handler.js.map